{"version":3,"file":"static/js/620.6320ac4d.chunk.js","mappings":"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","sources":["components/Chat/Chat.styled.js","components/Chat/Chat.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 15px 0;\n  width: 100%;\n`;\n\nexport const Chat = styled.div`\n  width: 500px;\n  height: 60vh;\n  background-color: lightgrey;\n  border: 1px solid black;\n  overflow-y: auto;\n`;\n\nexport const Form = styled.form``;\n\nexport const Input = styled.input``;\n\nexport const ChatMessage = styled.div`\n  display: flex;\n  justify-content: ${({ $ownMessage }) =>\n    $ownMessage ? 'flex-end' : 'flex-start'};\n`;\n\nexport const Message = styled.div`\n  background-color: #f0f0f0;\n  padding: 10px;\n  border-radius: 8px;\n  margin: 5px;\n\n  ${({ $ownMessage }) =>\n    $ownMessage &&\n    css`\n      background-color: #dcf8c6;\n    `}\n`;\n","import { useEffect, useState } from 'react';\n// import { Context } from 'index';\n// import { useAuthState } from 'react-firebase-hooks/auth';\n// import { useCollectionData } from 'react-firebase-hooks/firestore';\n// import { serverTimestamp, doc, setDoc } from 'firebase/firestore';\nimport {\n  // doc,\n  // setDoc,\n  addDoc,\n  // getDoc,\n  orderBy,\n  query,\n  getFirestore,\n  onSnapshot,\n  serverTimestamp,\n  collection,\n} from 'firebase/firestore';\nimport { app, auth } from '../../firebase';\n\nimport * as s from './Chat.styled';\nimport Button from 'components/Button';\n// import { onAuthStateChanged } from 'firebase/auth';\n\nconst db = getFirestore(app);\n\nconst Chat = () => {\n  const user = auth.currentUser;\n  // const { auth, firestore } = useContext(Context);\n  console.log(user);\n  // const [user] = useAuthState(auth);\n  // const [messages, loading] = useCollectionData(\n  //   firestore.collection('messages').orderBy('createdAt')\n  // );\n\n  // const [inputValue, setInputValue] = useState('');\n  // const [user, setUser] = useState(null);\n  // console.log(user);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  // console.log(firestore);\n\n  // const sentMessage = async () => {\n  //   await addDoc(doc(db, 'messages'), {\n  //     uid: user.uid,\n  //     photoURL: user.photoURL,\n  //     displayName: user.displayName,\n  //     text: setNewMessages,\n  //     timestamp: serverTimestamp(),\n  //   });\n  //   setNewMessages('');\n  // };\n\n  const sendMessage = async () => {\n    await addDoc(collection(db, 'messages'), {\n      uid: user.uid,\n      photoURL: user.photoURL,\n      displayName: user.displayName,\n      text: newMessage,\n      timestamp: serverTimestamp(),\n    });\n\n    setNewMessage('');\n  };\n\n  useEffect(() => {\n    const q = query(collection(db, 'messages'), orderBy('timestamp'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      setMessages(\n        snapshot.docs.map(doc => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      );\n    });\n    return unsubscribe;\n  }, []);\n\n  // useEffect(() => {\n  //   onAuthStateChanged(auth, user => {\n  //     if (user) {\n  //       setUser(user);\n  //     } else {\n  //       setUser(null);\n  //     }\n  //   });\n  // });\n\n  useEffect(() => {\n    const q = query(collection(db, 'messages'), orderBy('timestamp'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      setMessages(\n        snapshot.docs.map(doc => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      );\n    });\n    return unsubscribe;\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    sendMessage();\n  };\n\n  return (\n    <s.Container>\n      <s.Chat>\n        <div>\n          {messages.map(msg => (\n            <s.ChatMessage key={msg.id} $ownMessage={msg.data.uid === user.uid}>\n              <s.Message $ownMessage={msg.data.uid === user.uid}>\n                <img src={msg.data.photoURL} alt=\"avatar_of_user\" />\n                <p>{msg.data.displayName}</p>\n                {msg.data.text}\n              </s.Message>\n            </s.ChatMessage>\n          ))}\n        </div>\n      </s.Chat>\n      <s.Form onSubmit={handleSubmit}>\n        <s.Input\n          value={newMessage}\n          onChange={e => setNewMessage(e.target.value)}\n        />\n        <Button name=\"submit\" />\n      </s.Form>\n    </s.Container>\n  );\n};\n\nexport default Chat;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Chat","_templateObject2","Form","form","_templateObject3","Input","input","_templateObject4","ChatMessage","_templateObject5","_ref","$ownMessage","Message","_templateObject6","_ref2","css","_templateObject7","db","getFirestore","app","user","auth","currentUser","console","log","messages","setMessages","useState","newMessage","setNewMessage","useEffect","q","query","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","_jsxs","s","children","_jsx","msg","uid","src","photoURL","alt","displayName","text","onSubmit","e","preventDefault","async","addDoc","timestamp","serverTimestamp","sendMessage","value","onChange","target","Button","name"],"sourceRoot":""}