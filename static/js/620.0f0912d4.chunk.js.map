{"version":3,"file":"static/js/620.0f0912d4.chunk.js","mappings":"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","sources":["components/Chat/Chat.styled.js","components/Chat/Chat.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n\n  // padding: 15px 0;\n  width: 100%;\n`;\n\nexport const Chat = styled.div`\n  width: 500px;\n  height: 60vh;\n  background-color: lightgrey;\n  border: 1px solid black;\n  overflow-y: auto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  width: 500px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: auto;\n  padding: 10px;\n`;\n\nexport const ChatMessage = styled.div`\n  display: flex;\n  justify-content: ${({ $ownMessage }) =>\n    $ownMessage ? 'flex-end' : 'flex-start'};\n`;\n\nexport const Message = styled.div`\n  background-color: #f0f0f0;\n  padding: 10px;\n  border-radius: 8px;\n  margin: 5px;\n\n  ${({ $ownMessage }) =>\n    $ownMessage &&\n    css`\n      background-color: #dcf8c6;\n    `}\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const Image = styled.img`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n`;\n\nexport const UserName = styled.h2`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n`;\n\nexport const IconWrapper = styled.input`\n  background: inherit;\n  border: none;\n  cursor: pointer;\n  width: 30px;\n  height: auto;\n`;\n\nexport const AddIconLabel = styled.label`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  text-decoration: underline;\n  cursor: pointer;\n`;\nexport const AddIconInput = styled.input`\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n`;\n\nexport const ChoiseContainer = styled.div`\n  display: flex;\n  align-item: center;\n  justify-item: center;\n  flex-direction: column;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-item: center;\n  justify-item: center;\n  gap: 10px;\n`;\n\nexport const DownloadFile = styled.img`\n  width: 150px;\n  height: 150px;\n  // border-radius: 50%;\n`;\n","import { useEffect, useState, useRef } from 'react';\nimport {\n  addDoc,\n  orderBy,\n  query,\n  onSnapshot,\n  serverTimestamp,\n  collection,\n  where,\n} from 'firebase/firestore';\nimport { auth, db, storage } from '../../FirebaseConfig';\nimport { nanoid } from 'nanoid';\nimport { FaPaperclip } from 'react-icons/fa6';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n\nimport { onAuthStateChanged } from 'firebase/auth';\n\nimport * as s from './Chat.styled';\nimport Button from 'components/Button';\nimport Section from 'components/Section';\nimport Container from 'components/Container';\n\nconst Chat = () => {\n  // const user = auth.currentUser;\n  const [user, setUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [room, setRoom] = useState('');\n  const [roomNumber, setRoomNumber] = useState('');\n  const [copied, setCopied] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [uploadDoc, setUploadDoc] = useState(null);\n  const [imageList, setImageList] = useState('');\n\n  console.log(imageList);\n\n  useEffect(() => {\n    const storedRoom = localStorage.getItem('room');\n    if (storedRoom) {\n      setRoom(storedRoom);\n    }\n  }, []);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n        const storedRoom = localStorage.getItem('room');\n        setRoom(storedRoom);\n      } else {\n        setUser(null);\n        localStorage.removeItem('room');\n        setRoom('');\n      }\n    });\n  }, []);\n\n  const sendMessage = async () => {\n    await addDoc(collection(db, 'messages'), {\n      uid: user.uid,\n      photoURL: user.photoURL,\n      displayName: user.displayName,\n      text: newMessage,\n      timestamp: serverTimestamp(),\n      room,\n      file: imageList,\n    });\n\n    setNewMessage('');\n  };\n\n  useEffect(() => {\n    const q = query(\n      collection(db, 'messages'),\n      where('room', '==', room),\n      orderBy('timestamp')\n    );\n    const unsubscribe = onSnapshot(q, snapshot => {\n      setMessages(\n        snapshot.docs.map(doc => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      );\n      scrollToBottom();\n    });\n    return unsubscribe;\n  }, [room]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    uploadFile();\n    sendMessage();\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleCreateRoom = () => {\n    const newRoom = nanoid();\n    setRoom(newRoom);\n    localStorage.setItem('room', newRoom);\n  };\n\n  const handleCopyRoomInvitation = async () => {\n    await navigator.clipboard.writeText(room);\n    setCopied(true);\n  };\n\n  const goToRoom = e => {\n    e.preventDefault();\n    localStorage.setItem('room', roomNumber);\n    setRoom(roomNumber);\n  };\n\n  const handleGoBack = () => {\n    localStorage.removeItem('room');\n    setRoom('');\n  };\n\n  const uploadFile = () => {\n    if (uploadDoc == null) return;\n\n    const imageRef = ref(\n      storage,\n      `images/room/${room}/${uploadDoc.name + nanoid()}`\n    );\n\n    uploadBytes(imageRef, uploadDoc).then(snapshot => {\n      console.log('Uploaded!');\n      getDownloadURL(snapshot.ref).then(url => setImageList(url));\n      setUploadDoc(null);\n    });\n  };\n\n  // const roomImagesRef = ref(storage, `images/room/${room}`);\n\n  // useEffect(() => {\n  //   listAll(roomImagesRef).then(res => {\n  //     console.log(res);\n  //     res.items.forEach(item => {\n  //       getDownloadURL(item).then(url => setImageList(prev => [...prev, url]));\n  //     });\n  //   });\n  // }, [imageList]);\n\n  return (\n    <Section>\n      <Container>\n        {!room ? (\n          <s.ChoiseContainer>\n            <p>Do you want create new room ?</p>\n            <Button func={handleCreateRoom} name=\"Create room\" />\n            <p>Click here or you have invitation?</p>\n            <s.Form onClick={goToRoom}>\n              <s.Input\n                type=\"text\"\n                value={roomNumber}\n                onChange={e => setRoomNumber(e.target.value)}\n                placeholder=\"Insert your invitation here...\"\n              />\n              <Button name=\"Go to Room\" type=\"submit\" />\n            </s.Form>\n          </s.ChoiseContainer>\n        ) : (\n          <>\n            <s.Container>\n              <s.ButtonContainer>\n                <Button\n                  name={copied ? 'Copied!' : 'Click here to copy invitation'}\n                  type=\"button\"\n                  func={handleCopyRoomInvitation}\n                  // disabled={copied}\n                />\n                <Button func={handleGoBack} name=\"Return\" type=\"button\" />\n              </s.ButtonContainer>\n\n              <s.Chat>\n                <div>\n                  {messages.map(message => (\n                    <s.ChatMessage\n                      key={message.id}\n                      $ownMessage={message.data.uid === user.uid}\n                    >\n                      <s.Message\n                        $ownMessage={message.data.uid === user.uid}\n                        ref={messagesEndRef}\n                      >\n                        <s.Box>\n                          <s.Image\n                            src={message.data.photoURL}\n                            alt=\"avatar_of_user\"\n                          />\n                          <s.UserName>{message.data.displayName}</s.UserName>\n                        </s.Box>\n                        <s.Description>{message.data.text}</s.Description>\n                        <s.DownloadFile\n                          src={message.data.file}\n                          alt=\"document_img\"\n                        />\n                      </s.Message>\n                    </s.ChatMessage>\n                  ))}\n                </div>\n                {/* {imageList.map(url => {\n                  return <img src={url} />;\n                })} */}\n              </s.Chat>\n              <s.Form onSubmit={handleSubmit}>\n                <s.AddIconInput\n                  type=\"file\"\n                  id=\"paperclip\"\n                  onChange={e => setUploadDoc(e.target.files[0])}\n                />\n                <s.AddIconLabel htmlFor=\"paperclip\">\n                  <FaPaperclip />\n                </s.AddIconLabel>\n                {/* <Button func={uploadFile} name=\"temporal upload\" /> */}\n                <s.Input\n                  value={newMessage}\n                  onChange={e => setNewMessage(e.target.value)}\n                  placeholder=\"Insert your message here...\"\n                />\n                <Button name=\"SENT\" type=\"submit\" />\n              </s.Form>\n            </s.Container>\n          </>\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Chat;\n","import styled from 'styled-components';\n\nimport { vars } from 'stylesheet/variables';\n\nexport const Container = styled.div`\n  padding: 0 72px;\n  margin: 0 auto;\n  min-width: ${vars.breakpoints.mobileMin};\n  max-width: ${vars.breakpoints.mobileMax};\n\n  @media screen and (min-width: ${vars.breakpoints.tablet}) {\n    padding: 0 88px;\n    min-width: 768px;\n  }\n  @media screen and (min-width: ${vars.breakpoints.desktop}) {\n    padding: 0 124px;\n    max-width: 1280px;\n  }\n`;\n","import * as s from './Container.styled';\n\nconst Container = ({ children }) => <s.Container>{children}</s.Container>;\n\nexport default Container;\n","import styled from 'styled-components';\n\nimport { vars } from 'stylesheet/variables';\n\nexport const Section = styled.section`\n  padding: 60px 0;\n\n  @media screen and (min-width: ${vars.breakpoints.tablet}) {\n    padding: 80px 0;\n  }\n  @media screen and (min-width: ${vars.breakpoints.desktop}) {\n    padding: 90px 0;\n  }\n`;\n","import * as s from './Section.styled';\n\nconst Section = ({ children }) => <s.Section>{children}</s.Section>;\n\nexport default Section;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Chat","_templateObject2","Form","form","_templateObject3","Input","input","_templateObject4","ChatMessage","_templateObject5","_ref","$ownMessage","Message","_templateObject6","_ref2","css","_templateObject7","Box","_templateObject8","Image","img","_templateObject9","UserName","h2","_templateObject10","Description","p","_templateObject11","AddIconLabel","_templateObject12","label","_templateObject13","AddIconInput","_templateObject14","ChoiseContainer","_templateObject15","ButtonContainer","_templateObject16","DownloadFile","_templateObject17","user","setUser","useState","messagesEndRef","useRef","room","setRoom","roomNumber","setRoomNumber","copied","setCopied","messages","setMessages","newMessage","setNewMessage","uploadDoc","setUploadDoc","imageList","setImageList","console","log","useEffect","storedRoom","localStorage","getItem","onAuthStateChanged","auth","removeItem","q","query","collection","db","where","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","uploadFile","imageRef","ref","storage","concat","name","nanoid","uploadBytes","then","getDownloadURL","url","_jsx","Section","children","_Fragment","_jsxs","s","Button","type","func","async","navigator","clipboard","writeText","handleGoBack","message","uid","src","photoURL","alt","displayName","text","file","onSubmit","e","preventDefault","addDoc","timestamp","serverTimestamp","sendMessage","onChange","target","files","htmlFor","FaPaperclip","value","placeholder","handleCreateRoom","newRoom","setItem","onClick","vars","breakpoints","mobileMin","mobileMax","tablet","desktop","section"],"sourceRoot":""}