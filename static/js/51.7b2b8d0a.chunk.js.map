{"version":3,"file":"static/js/51.7b2b8d0a.chunk.js","mappings":"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","sources":["components/Auth/AccoutnsEnter/AccoutnsEnter.styled.js","components/Auth/AccoutnsEnter/AccoutnsEnter.jsx","components/Base/Container/Container.styled.js","components/Base/Container/Container.jsx","components/Base/Section/Section.styled.js","components/Base/Section/Section.jsx","components/Auth/Login/FormLogin/FormLogin.styled.js","components/Auth/Login/FormLogin/FormLogin.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 5px;\n\n  max-width: 250px;\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  font-weight: 700;\n  font-size: 24px;\n  text-transform: uppercase;\n\n  color: black;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  font-size: 18px;\n\n  color: black;\n\n  border-radius: 3px;\n  border: 1px solid black;\n  background: white;\n`;\n","// import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  signInWithPopup,\n  GoogleAuthProvider,\n  FacebookAuthProvider,\n  GithubAuthProvider,\n} from 'firebase/auth';\n\nimport { auth } from 'FirebaseConfig';\nimport { useTranslation } from 'react-i18next';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport Button from 'components/Common/Button';\n\nimport * as s from './AccoutnsEnter.styled';\n\nconst AccoutnsEnter = ({ setLoading }) => {\n  //   const [loading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const logInWithGoogle = async () => {\n    setLoading(true);\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      Notify.success('Cool, you enter with Google account');\n      navigate('/chat');\n    } catch (error) {\n      Notify.failure('Oops, something go wrong. Try later');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logInWithFacebook = async () => {\n    setLoading(true);\n    const provider = new FacebookAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      Notify.success('Cool, you enter with Facebook account');\n      navigate('/chat');\n    } catch (error) {\n      Notify.failure('Oops, something go wrong. Try later');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logInWithGitHub = async () => {\n    setLoading(true);\n    const provider = new GithubAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      Notify.success('Cool, you enter with GitHub account');\n      navigate('/chat');\n    } catch (error) {\n      Notify.failure('Oops, something go wrong. Try later');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <s.Container>\n      <Button name={t('button.continueWithGoogle')} func={logInWithGoogle} />\n      <Button\n        name={t('button.continueWithFacebook')}\n        func={logInWithFacebook}\n      />\n      <Button name={t('button.continueWithGitHub')} func={logInWithGitHub} />\n    </s.Container>\n  );\n};\n\nexport default AccoutnsEnter;\n","import styled from 'styled-components';\n\nimport { vars } from 'utils/variables';\n\nexport const Container = styled.div`\n  padding: 0 72px;\n  margin: 0 auto;\n  min-width: ${vars.breakpoints.mobileMin};\n  max-width: ${vars.breakpoints.mobileMax};\n\n  @media screen and (min-width: ${vars.breakpoints.tablet}) {\n    padding: 0 88px;\n    min-width: 768px;\n  }\n  @media screen and (min-width: ${vars.breakpoints.desktop}) {\n    padding: 0 81px;\n    max-width: 1440px;\n  }\n`;\n","import * as s from './Container.styled';\n\nconst Container = ({ children }) => <s.Container>{children}</s.Container>;\n\nexport default Container;\n","import styled from 'styled-components';\n\nimport { vars } from 'utils/variables';\n\nexport const Section = styled.section`\n  padding: 30px 0;\n\n  @media screen and (min-width: ${vars.breakpoints.tablet}) {\n    padding: 30px 0;\n  }\n  @media screen and (min-width: ${vars.breakpoints.desktop}) {\n    padding: 30px 0;\n  }\n`;\n","import * as s from './Section.styled';\n\nconst Section = ({ children }) => <s.Section>{children}</s.Section>;\n\nexport default Section;\n","import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nimport { vars } from 'utils/variables';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-weight: 700;\n  font-size: 24px;\n  text-transform: uppercase;\n\n  color: black;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  font-size: 18px;\n\n  color: black;\n\n  border-radius: 3px;\n  border: 1px solid black;\n  background: white;\n`;\n\nexport const AccountsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 5px;\n\n  max-width: 250px;\n`;\n\nexport const Redirect = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  text-transform: uppercase;\n\n  color: ${vars.colors.black};\n`;\n\nexport const Link = styled(NavLink)`\n  font-weight: 500;\n  font-size: 14px;\n\n  text-decoration: underline;\n  text-transform: uppercase;\n\n  cursor: pointer;\n\n  color: ${vars.colors.accent};\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\n\nimport { auth } from 'FirebaseConfig';\nimport { useTranslation } from 'react-i18next';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport Button from 'components/Common/Button';\n\nimport * as s from './FormLogin.styled';\nimport Loader from 'components/Common/Loader';\nimport AccoutnsEnter from 'components/Auth/AccoutnsEnter';\n\nconst FormLogin = () => {\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n\n    try {\n      setLoading(true);\n      await signInWithEmailAndPassword(auth, email, password);\n      Notify.success('Welcome back');\n      navigate('/chat');\n    } catch (error) {\n      Notify.failure('Oops, something go wrong. Try later');\n    } finally {\n      setLoading(false);\n      form.reset();\n    }\n  };\n\n  return (\n    <s.Container>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <s.Title>{t('logInTitle')}</s.Title>\n          <s.Form onSubmit={handleSubmit} autoComplete=\"on\">\n            <s.Label>\n              {t('email')}\n              <s.Input type=\"email\" name=\"email\" autoComplete=\"on\" />\n            </s.Label>\n            <s.Label>\n              {t('password')}\n              <s.Input type=\"password\" name=\"password\" autoComplete=\"on\" />\n            </s.Label>\n            <s.Redirect>\n              {t('goToRegisterPage')}{' '}\n              <s.Link to=\"/register\">{t('register')}</s.Link>\n            </s.Redirect>\n            <Button type={'submit'} name={t('button.logIn')} />\n          </s.Form>\n          <s.Title>----------------- or -----------------</s.Title>\n          <AccoutnsEnter setLoading={setLoading} />\n        </>\n      )}\n    </s.Container>\n  );\n};\n\nexport default FormLogin;\n","import FormLogin from 'components/Auth/Login/FormLogin';\nimport Section from 'components/Base/Section';\nimport Container from 'components/Base/Container';\n\nconst Login = () => {\n  return (\n    <Section>\n      <Container>\n        <FormLogin />\n      </Container>\n    </Section>\n  );\n};\n\nexport default Login;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","h2","_templateObject2","form","_templateObject3","label","_templateObject4","input","_templateObject5","_ref","setLoading","t","useTranslation","navigate","useNavigate","_jsxs","s","children","_jsx","Button","name","func","async","provider","GoogleAuthProvider","signInWithPopup","auth","Notify","success","error","failure","FacebookAuthProvider","GithubAuthProvider","vars","breakpoints","mobileMin","mobileMax","tablet","desktop","Section","section","Title","Form","Label","Input","Redirect","_templateObject6","p","_templateObject7","colors","black","Link","NavLink","_templateObject8","accent","FormLogin","loading","useState","Loader","_Fragment","onSubmit","e","preventDefault","currentTarget","email","elements","value","password","signInWithEmailAndPassword","reset","autoComplete","type","to","AccoutnsEnter","Login"],"sourceRoot":""}