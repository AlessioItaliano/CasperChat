{"version":3,"file":"static/js/390.24d94251.chunk.js","mappings":"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","sources":["components/Base/Container/Container.styled.js","components/Base/Container/Container.jsx","components/Base/Section/Section.styled.js","components/Base/Section/Section.jsx","components/Common/Modal/Modal.styled.js","components/Common/Modal/Modal.jsx","components/ImageModal/ImageModal.styled.js","components/ImageModal/ImageModal.jsx","components/Chat/ChoiceRoomSelect/ChoiceRoomSelect.jsx","components/Chat/ChoiceRoom/ChoiceRoom.styled.js","components/Common/Form/Form.styled.js","components/Common/Form/Form.jsx","components/Chat/ChoiceRoom/ChoiceRoom.jsx","components/Chat/ChatMessage/ChatMessage.styled.js","components/Chat/ChatMessage/ChatMessage.jsx","components/Chat/ChatField/ChatField.styled.js","components/Chat/ChatField/ChatField.jsx","components/Chat/ChatForm/ChatForm.styled.js","components/Chat/ChatForm/ChatForm.jsx","components/Chat/ChatPreLoadModal/ChatPreLoadModal.styled.js","components/Chat/ChatPreLoadModal/ChatPreLoadModal.jsx","components/Chat/ChatNavigation/ChatNavigation.styled.js","components/Chat/ChatNavigation/ChatNavigation.jsx","components/Chat/Chat.styled.js","components/Chat/Chat.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { vars } from 'utils/variables';\n\nexport const Container = styled.div`\n  padding: 0 72px;\n  margin: 0 auto;\n  min-width: ${vars.breakpoints.mobileMin};\n  max-width: ${vars.breakpoints.mobileMax};\n\n  @media screen and (min-width: ${vars.breakpoints.tablet}) {\n    padding: 0 88px;\n    min-width: 768px;\n  }\n  @media screen and (min-width: ${vars.breakpoints.desktop}) {\n    padding: 0 81px;\n    max-width: 1440px;\n  }\n`;\n","import * as s from './Container.styled';\n\nconst Container = ({ children }) => <s.Container>{children}</s.Container>;\n\nexport default Container;\n","import styled from 'styled-components';\n\nimport { vars } from 'utils/variables';\n\nexport const Section = styled.section`\n  padding: 30px 0;\n\n  @media screen and (min-width: ${vars.breakpoints.tablet}) {\n    padding: 30px 0;\n  }\n  @media screen and (min-width: ${vars.breakpoints.desktop}) {\n    padding: 30px 0;\n  }\n`;\n","import * as s from './Section.styled';\n\nconst Section = ({ children }) => <s.Section>{children}</s.Section>;\n\nexport default Section;\n","import styled from 'styled-components';\n\nimport { vars } from 'utils/variables';\n\nexport const Backdrop = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n\n  background-color: transparent;\n`;\n\nexport const ModalField = styled.div`\n  position: relative;\n\n  width: calc(100% - 30px);\n  max-width: 541px;\n  height: auto;\n  max-height: calc(100vh - 30px);\n\n  padding: 40px 20px 20px 20px;\n  overflow-y: auto;\n\n  border-radius: 12px;\n\n  background-color: ${vars.background.bgSecondary};\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  cursor: pointer;\n  border: none;\n\n  background-color: transparent;\n`;\n\n// export const IconBtn = styled(CloseIconBtn)`\n//   width: 100%;\n//   height: 100%;\n\n//   color: ${variables.colors.black};\n// `;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport * as s from './Modal.styled';\n\nimport { IoMdClose } from 'react-icons/io';\n\nconst ModalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <s.Backdrop onClick={handleBackdropClick}>\n      <s.ModalField>\n        <s.CloseButton onClick={onClose}>\n          <IoMdClose />\n        </s.CloseButton>\n        {children}\n      </s.ModalField>\n    </s.Backdrop>,\n    ModalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n","import Modal from 'components/Common/Modal';\nimport * as s from './ImageModal.styled';\n\nconst ImageModal = ({ onClose, picture }) => {\n  return (\n    <Modal onClose={onClose}>\n      <s.Image src={picture} alt=\"large_img\" />\n    </Modal>\n  );\n};\n\nexport default ImageModal;\n","import Select from 'react-select';\n\nconst ChoiceChatSelect = ({ options, selectedRoom, onSelectRoom }) => {\n  return (\n    <Select\n      options={options}\n      value={selectedRoom}\n      onChange={onSelectRoom}\n      styles={{\n        control: baseStyles => ({\n          ...baseStyles,\n          height: 'auto',\n          padding: '7px 15px',\n          borderRadius: '12px',\n          border: 'none',\n          width: '291px',\n        }),\n        valueContainer: baseStyles => ({\n          ...baseStyles,\n          padding: '0',\n          margin: '0',\n        }),\n        indicatorsContainer: baseStyles => ({\n          ...baseStyles,\n          padding: '0',\n          margin: '0',\n        }),\n        input: baseStyles => ({\n          ...baseStyles,\n          padding: '0',\n          margin: '0',\n        }),\n      }}\n    />\n  );\n};\n\nexport default ChoiceChatSelect;\n","import styled from 'styled-components';\n\nimport { vars } from 'utils/variables';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  gap: 30px;\n\n  // padding: 48px;\n  height: 80vh;\n  // background-color: ${vars.background.bgTertiary};\n  background-color: inherit;\n  border-radius: 12px;\n`;\n\nexport const Title = styled.p`\n  color: ${vars.colors.secondaryText};\n\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.62em;\n  text-transform: uppercase;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  justify-content: center;\n  width: ${props => props.$formSize};\n`;\n\nexport const Input = styled.input`\n  height: auto;\n  padding: 15px;\n  border-radius: 12px;\n  border: none;\n  width: 100%;\n`;\n","import Button from 'components/Common/Button';\n\nimport * as s from './Form.styled';\n\nconst Form = ({\n  onSubmit,\n  formValue,\n  onFormChange,\n  formPlaceholder,\n  btnName,\n  btnDisabled,\n  formSize,\n}) => {\n  return (\n    <s.Form onSubmit={onSubmit} $formSize={formSize}>\n      <s.Input\n        value={formValue}\n        onChange={onFormChange}\n        placeholder={formPlaceholder}\n      />\n      <Button name={btnName} type=\"submit\" disabled={btnDisabled} />\n    </s.Form>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect } from 'react';\n\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  orderBy,\n  query,\n  onSnapshot,\n  collection,\n  where,\n  getDocs,\n} from 'firebase/firestore';\n\nimport { db } from 'FirebaseConfig';\n\nimport Button from 'components/Common/Button';\nimport ChoiceRoomSelect from '../ChoiceRoomSelect';\n\nimport * as s from './ChoiceRoom.styled';\nimport Form from 'components/Common/Form';\n\nconst ChoiceRoom = ({ setRoom, user }) => {\n  const [roomNumber, setRoomNumber] = useState('');\n  const [userRooms, setUserRooms] = useState('');\n  const [selectedRoom, setSelectedRoom] = useState('');\n\n  useEffect(() => {\n    const q = query(collection(db, 'messages'), orderBy('timestamp'));\n\n    const unsubscribe = onSnapshot(q, snapshot => {\n      setUserRooms(\n        snapshot.docs\n          .filter(doc => doc.data().uid === user.uid)\n          .map((doc, index) => ({\n            value: doc.data().room,\n            label: `Room ${index + 1}`,\n          }))\n      );\n    });\n\n    return unsubscribe;\n  }, [user]);\n\n  const handleCreateRoom = () => {\n    const newRoom = nanoid();\n    setRoom(newRoom);\n    localStorage.setItem('room', newRoom);\n\n    Notify.success('Room has been created!');\n  };\n\n  const handleSelectRoom = selectedRoom => {\n    setSelectedRoom(selectedRoom.value);\n    localStorage.setItem('room', selectedRoom.value);\n    setRoom(selectedRoom.value);\n\n    Notify.success('Welcome back!');\n  };\n\n  const handleAcceptInvitationToRoom = async e => {\n    e.preventDefault();\n\n    const roomExists = await checkRoomExists(roomNumber);\n\n    if (roomExists) {\n      localStorage.setItem('room', roomNumber);\n      setRoom(roomNumber);\n      Notify.success('Welcome aboard!');\n    } else {\n      Notify.failure('Room does not exist. Please enter a valid room number.');\n    }\n  };\n\n  const checkRoomExists = async roomNumber => {\n    try {\n      const q = query(\n        collection(db, 'messages'),\n        where('room', '==', roomNumber)\n      );\n      const roomSnapshot = await getDocs(q);\n      return !roomSnapshot.empty;\n    } catch (error) {\n      console.error('Error checking room existence:', error);\n      return false;\n    }\n  };\n\n  return (\n    <s.Container>\n      <s.Title>Do you want create new room ?</s.Title>\n      <Button\n        func={handleCreateRoom}\n        name=\"Create room\"\n        type=\"button\"\n        size={'291px'}\n      />\n\n      <s.Title>---------- or ---------</s.Title>\n      <s.Title>You already have privet rooms?</s.Title>\n      <ChoiceRoomSelect\n        options={userRooms}\n        selectedRoom={selectedRoom}\n        onSelectRoom={handleSelectRoom}\n      />\n\n      <s.Title>---------- or ---------</s.Title>\n      <s.Title>You already have invitation?</s.Title>\n      <Form\n        onSubmit={handleAcceptInvitationToRoom}\n        inputValue={roomNumber}\n        onFormChange={e => setRoomNumber(e.target.value)}\n        formPlaceholder={'Insert your invitation here...'}\n        btnName={'Join'}\n        formSize={'291px'}\n      />\n    </s.Container>\n  );\n};\n\nexport default ChoiceRoom;\n","import styled, { css } from 'styled-components';\nimport { vars } from 'utils/variables';\n\nexport const Wrapper = styled.div`\n  width: 500px;\n  height: 60vh;\n  background-color: lightgrey;\n  border: 1px solid black;\n  overflow-y: auto;\n  padding: 10px;\n\n  border: none;\n  border-radius: 12px;\n\n  background-color: ${vars.background.bgSecondary};\n`;\n\nexport const Message = styled.div`\n  display: flex;\n  justify-content: ${({ $ownMessage }) =>\n    $ownMessage ? 'flex-end' : 'flex-start'};\n`;\n\nexport const UserMessage = styled.div`\n  background-color: ${vars.colors.primaryMsm};\n  padding: 10px;\n  border-radius: 8px;\n  margin: 5px;\n\n  ${({ $ownMessage }) =>\n    $ownMessage &&\n    css`\n      background-color: ${vars.colors.secondaryMsm};\n    `}\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const Image = styled.img`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n`;\n\nexport const UserName = styled.h2`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n`;\n\nexport const DownloadFile = styled.img`\n  width: 250px;\n  height: auto;\n`;\n","import { useRef } from 'react';\n\nimport UserAvatar from 'components/Features/UserAvatar';\n\nimport * as s from './ChatMessage.styled';\n\nconst ChatMessage = ({ message, user, onModal }) => {\n  const messagesEndRef = useRef(null);\n\n  return (\n    <s.Message $ownMessage={message.data.uid === user.uid} ref={messagesEndRef}>\n      <s.UserMessage\n        $ownMessage={message.data.uid === user.uid}\n        ref={messagesEndRef}\n      >\n        <s.UserInfo>\n          <UserAvatar user={message.data} />\n          <s.UserName>{message.data.displayName}</s.UserName>\n        </s.UserInfo>\n        <s.Description>{message.data.text}</s.Description>\n\n        {s.DownloadFile && message.data.file && (\n          <s.DownloadFile\n            src={message.data.file}\n            alt=\"document_img\"\n            onClick={() => onModal(message.data.file)}\n          />\n        )}\n      </s.UserMessage>\n    </s.Message>\n  );\n};\n\nexport default ChatMessage;\n","import styled, { css } from 'styled-components';\nimport { vars } from 'utils/variables';\n\nexport const Wrapper = styled.div`\n  width: 500px;\n  height: 60vh;\n  background-color: lightgrey;\n  border: 1px solid black;\n  overflow-y: auto;\n  padding: 10px;\n\n  border: 0.5px solid;\n  border-radius: 12px;\n\n  background-color: ${vars.background.bgSecondary};\n`;\n\nexport const MessageItem = styled.div`\n  display: flex;\n  justify-content: ${({ $ownMessage }) =>\n    $ownMessage ? 'flex-end' : 'flex-start'};\n`;\n\nexport const Message = styled.div`\n  background-color: ${vars.colors.primaryMsm};\n  padding: 10px;\n  border-radius: 8px;\n  margin: 5px;\n\n  ${({ $ownMessage }) =>\n    $ownMessage &&\n    css`\n      background-color: ${vars.colors.secondaryMsm};\n    `}\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const Image = styled.img`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n`;\n\nexport const UserName = styled.h2`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n`;\n\nexport const DownloadFile = styled.img`\n  width: 250px;\n  height: auto;\n`;\n","import ChatMessage from '../ChatMessage';\n\nimport * as s from './ChatField.styled';\n\nconst ChatField = ({ messages, user, messagesEndRef, onModal }) => {\n  return (\n    <s.Wrapper>\n      {messages.map(message => (\n        <ChatMessage\n          key={message.id}\n          message={message}\n          user={user}\n          messagesEndRef={messagesEndRef}\n          onModal={onModal}\n        />\n      ))}\n    </s.Wrapper>\n  );\n};\n\nexport default ChatField;\n","import styled from 'styled-components';\n// import { vars } from 'utils/variables';\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const AddIcon = styled.div`\n  position: absolute;\n  top: 17px;\n  right: 150px;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  text-decoration: underline;\n  cursor: pointer;\n`;\nexport const Input = styled.input`\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n`;\n","// import { useState, useRef } from 'react';\n\nimport * as s from './ChatForm.styled';\nimport { FaPaperclip } from 'react-icons/fa6';\n// import UserAvatar from 'components/Features/UserAvatar';\nimport Form from 'components/Common/Form';\n\nconst ChatForm = ({\n  onSubmit,\n  inputValue,\n  onFormChange,\n  formPlaceholder,\n  btnName,\n  btnDisabled,\n  formSize,\n  onAddIcon,\n}) => {\n  return (\n    <s.Wrapper>\n      <Form\n        onSubmit={onSubmit}\n        inputValue={inputValue}\n        onFormChange={onFormChange}\n        formPlaceholder={formPlaceholder}\n        btnName={btnName}\n        btnDisabled={btnDisabled}\n        formSize={formSize}\n      />\n      <s.AddIcon>\n        <s.Input\n          type=\"file\"\n          accept=\"image/*\"\n          id=\"paperclip\"\n          onChange={onAddIcon}\n        />\n        <s.Label htmlFor=\"paperclip\">\n          <FaPaperclip />\n        </s.Label>\n      </s.AddIcon>\n    </s.Wrapper>\n  );\n};\n\nexport default ChatForm;\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 500px;\n  height: auto;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import Modal from 'components/Common/Modal';\nimport Button from 'components/Common/Button';\n\nimport * as s from './ChatPreLoadModal.styled';\n\nconst ChatPreLoadModal = ({\n  onClose,\n  picture,\n  btnRemoveName,\n  btnSentName,\n  onSubmit,\n}) => {\n  return (\n    <Modal onClose={onClose}>\n      <s.Image src={picture} alt=\"preLoad_img\" />\n      <s.Container>\n        <Button\n          type={'button'}\n          name={btnRemoveName}\n          func={onClose}\n          btnType={'remove'}\n        />\n        <Button type={'button'} name={btnSentName} func={onSubmit} />\n      </s.Container>\n    </Modal>\n  );\n};\n\nexport default ChatPreLoadModal;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-item: center;\n  justify-item: center;\n  gap: 10px;\n`;\n","import { useState } from 'react';\n\nimport * as s from './ChatNavigation.styled';\nimport Button from 'components/Common/Button';\n\nconst ChatNavigation = ({ room, setRoom }) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopyRoomInvitation = async () => {\n    await navigator.clipboard.writeText(room);\n    setCopied(true);\n  };\n\n  const handleGoBack = () => {\n    localStorage.removeItem('room');\n    setRoom('');\n  };\n\n  return (\n    <s.Container>\n      <Button\n        name={copied ? 'Copied!' : 'Click here to copy invitation'}\n        type=\"button\"\n        func={handleCopyRoomInvitation}\n      />\n      <Button func={handleGoBack} name=\"Return\" type=\"button\" />\n    </s.Container>\n  );\n};\n\nexport default ChatNavigation;\n","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n\n  // padding: 15px 0;\n  width: 100%;\n`;\n\nexport const Chat = styled.div`\n  width: 500px;\n  height: 60vh;\n  background-color: lightgrey;\n  border: 1px solid black;\n  overflow-y: auto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  width: 500px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: auto;\n  padding: 10px;\n`;\n\nexport const ChatMessage = styled.div`\n  display: flex;\n  justify-content: ${({ $ownMessage }) =>\n    $ownMessage ? 'flex-end' : 'flex-start'};\n`;\n\nexport const Message = styled.div`\n  background-color: #f0f0f0;\n  padding: 10px;\n  border-radius: 8px;\n  margin: 5px;\n\n  ${({ $ownMessage }) =>\n    $ownMessage &&\n    css`\n      background-color: #dcf8c6;\n    `}\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const Image = styled.img`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n`;\n\nexport const UserName = styled.h2`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n`;\n\nexport const IconWrapper = styled.input`\n  background: inherit;\n  border: none;\n  cursor: pointer;\n  width: 30px;\n  height: auto;\n`;\n\nexport const AddIconLabel = styled.label`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  text-decoration: underline;\n  cursor: pointer;\n`;\nexport const AddIconInput = styled.input`\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n`;\n\nexport const ChoiceContainer = styled.div`\n  display: flex;\n  align-item: center;\n  justify-item: center;\n  flex-direction: column;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-item: center;\n  justify-item: center;\n  gap: 10px;\n`;\n\nexport const PreDownload = styled.div`\n  width: 250px;\n  height: 250px;\n\n  position: relative;\n`;\n\nexport const DownloadFile = styled.img`\n  width: 250px;\n  height: auto;\n`;\n\nexport const DeleteIcon = styled.button`\n  // width: 25px;\n  height: 25px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: absolute;\n  top: 5px;\n  right: 5px;\n\n  border-radius: 50%;\n  border: none;\n  background-color: red;\n\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    color: white;\n    border: 0.5px solid white;\n  }\n`;\n","import { useEffect, useState, useRef } from 'react';\nimport {\n  addDoc,\n  orderBy,\n  query,\n  onSnapshot,\n  serverTimestamp,\n  collection,\n  where,\n} from 'firebase/firestore';\nimport {\n  ref,\n  uploadBytes,\n  getDownloadURL,\n  deleteObject,\n} from 'firebase/storage';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth, db, storage } from '../../FirebaseConfig';\nimport { nanoid } from 'nanoid';\n\nimport Section from 'components/Base/Section';\nimport Container from 'components/Base/Container';\nimport ImageModal from 'components/ImageModal';\nimport ChoiceRoom from 'components/Chat/ChoiceRoom';\nimport ChatField from 'components/Chat/ChatField';\nimport ChatForm from 'components/Chat/ChatForm';\nimport ChatPreLoadModal from 'components/Chat/ChatPreLoadModal';\nimport ChatNavigation from 'components/Chat/ChatNavigation';\n\nimport * as s from './Chat.styled';\n\nconst Chat = () => {\n  const [user, setUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [room, setRoom] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [uploadDoc, setUploadDoc] = useState(null);\n  const [imageList, setImageList] = useState('');\n  const [sendToChat, setSendToChat] = useState(false);\n  const [loadingImage, setLoadingImage] = useState(false);\n  const [preUploadFile, setPreUploadFile] = useState('');\n  const [shownModal, setShowModal] = useState(false);\n  const [modalPicture, setModalPicture] = useState('');\n\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n        const storedRoom = localStorage.getItem('room');\n        setRoom(storedRoom);\n      } else {\n        setUser(null);\n        localStorage.removeItem('room');\n        setRoom('');\n      }\n    });\n  }, []);\n\n  const sendMessage = async () => {\n    await addDoc(collection(db, 'messages'), {\n      uid: user.uid,\n      photoURL: user.photoURL,\n      displayName: user.displayName,\n      text: newMessage,\n      timestamp: serverTimestamp(),\n      room,\n      file: imageList,\n    });\n\n    setNewMessage('');\n  };\n\n  useEffect(() => {\n    const q = query(\n      collection(db, 'messages'),\n      where('room', '==', room),\n      orderBy('timestamp')\n    );\n    const unsubscribe = onSnapshot(q, snapshot => {\n      setMessages(\n        snapshot.docs.map(doc => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      );\n      scrollToBottom();\n    });\n    return unsubscribe;\n  }, [room]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (newMessage.trim() === '' && imageList === '') {\n      return;\n    }\n\n    await uploadFile();\n    sendMessage();\n    setSendToChat(false);\n    setNewMessage('');\n\n    setUploadDoc(null);\n    setImageList('');\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    const handleUpload = () => {\n      if (uploadDoc) {\n        uploadFile();\n      }\n    };\n\n    handleUpload();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [uploadDoc]);\n\n  const uploadFile = async () => {\n    if (uploadDoc == null) return;\n    setSendToChat(true);\n    setLoadingImage(true);\n\n    const imageName = uploadDoc.name + nanoid();\n    setPreUploadFile(imageName);\n\n    const imageRef = ref(storage, `images/room/${room}/${imageName}`);\n\n    await uploadBytes(imageRef, uploadDoc)\n      .then(snapshot => {\n        getDownloadURL(snapshot.ref).then(url => {\n          setImageList(url);\n          setLoadingImage(false);\n        });\n      })\n      .catch(error => {\n        console.error('Error uploading file:', error);\n        setLoadingImage(false);\n      });\n\n    setUploadDoc(null);\n  };\n\n  const deletePreLoad = () => {\n    setSendToChat(false);\n\n    setUploadDoc(null);\n    setImageList('');\n    deleteObject(ref(storage, `images/room/${room}/${preUploadFile}`));\n  };\n\n  const onModal = imageUrl => {\n    setModalPicture(imageUrl);\n    setShowModal(prevShownModal => !prevShownModal);\n  };\n\n  const handleSetRoom = selectedRoom => {\n    setRoom(selectedRoom);\n  };\n\n  return (\n    <Section>\n      <Container>\n        {!room ? (\n          <ChoiceRoom setRoom={handleSetRoom} user={user} />\n        ) : (\n          <>\n            <s.Container>\n              <ChatNavigation room={room} setRoom={setRoom} />\n\n              <ChatField\n                messages={messages}\n                user={user}\n                messagesEndRef={messagesEndRef}\n                onModal={onModal}\n              />\n              <ChatForm\n                onSubmit={handleSubmit}\n                inputValue={newMessage}\n                onFormChange={e => setNewMessage(e.target.value)}\n                formPlaceholder={'Insert your message here...'}\n                btnName={'SENT'}\n                btnDisabled={uploadDoc !== null}\n                formSize={'500px'}\n                onAddIcon={e => setUploadDoc(e.target.files[0])}\n              />\n              {sendToChat ? (\n                loadingImage ? (\n                  <p>Loading...</p>\n                ) : (\n                  <ChatPreLoadModal\n                    onClose={deletePreLoad}\n                    picture={imageList}\n                    btnRemoveName={'DELETE FILE'}\n                    btnSentName={'SENT'}\n                    onSubmit={handleSubmit}\n                  />\n                )\n              ) : null}\n            </s.Container>\n          </>\n        )}\n      </Container>\n      {shownModal && <ImageModal onClose={onModal} picture={modalPicture} />}\n    </Section>\n  );\n};\n\nexport default Chat;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","vars","breakpoints","mobileMin","mobileMax","tablet","desktop","_ref","children","_jsx","s","Section","section","Backdrop","ModalField","_templateObject2","background","bgSecondary","CloseButton","button","_templateObject3","ModalRoot","document","getElementById","onClose","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","_jsxs","IoMdClose","Image","img","picture","Modal","src","alt","options","selectedRoom","onSelectRoom","Select","value","onChange","styles","control","baseStyles","height","padding","borderRadius","border","width","valueContainer","margin","indicatorsContainer","input","bgTertiary","Title","p","colors","secondaryText","Form","form","props","$formSize","Input","onSubmit","formValue","onFormChange","formPlaceholder","btnName","btnDisabled","formSize","placeholder","Button","name","type","disabled","setRoom","user","roomNumber","setRoomNumber","useState","userRooms","setUserRooms","setSelectedRoom","q","query","collection","db","orderBy","onSnapshot","snapshot","docs","filter","doc","data","uid","map","index","room","label","concat","checkRoomExists","async","where","getDocs","empty","error","console","func","handleCreateRoom","newRoom","nanoid","localStorage","setItem","Notify","success","size","ChoiceRoomSelect","preventDefault","failure","inputValue","Message","$ownMessage","UserMessage","primaryMsm","_ref2","css","_templateObject4","secondaryMsm","UserInfo","_templateObject5","UserName","_templateObject6","h2","_templateObject7","Description","_templateObject8","DownloadFile","_templateObject9","message","onModal","messagesEndRef","useRef","ref","UserAvatar","displayName","text","file","Wrapper","messages","ChatMessage","id","AddIcon","Label","onAddIcon","accept","htmlFor","FaPaperclip","btnRemoveName","btnSentName","btnType","copied","setCopied","navigator","clipboard","writeText","handleGoBack","removeItem","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","Chat","setUser","setMessages","newMessage","setNewMessage","uploadDoc","setUploadDoc","imageList","setImageList","sendToChat","setSendToChat","loadingImage","setLoadingImage","preUploadFile","setPreUploadFile","shownModal","setShowModal","modalPicture","setModalPicture","onAuthStateChanged","auth","storedRoom","getItem","scrollToBottom","handleSubmit","trim","uploadFile","addDoc","photoURL","timestamp","serverTimestamp","sendMessage","_messagesEndRef$curre","current","scrollIntoView","behavior","imageName","imageRef","storage","uploadBytes","then","getDownloadURL","url","catch","imageUrl","prevShownModal","_Fragment","ChatNavigation","ChatField","ChatForm","files","ChatPreLoadModal","deletePreLoad","deleteObject","ChoiceRoom","ImageModal"],"sourceRoot":""}